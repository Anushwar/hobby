{"version":3,"sources":["theme/index.js","firebase.js","components/Navbar.js","redux/actions/project.js","redux/triggers/project.js","pages/Add.js","pages/ProjectDetails.js","pages/Home.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/reducers/project.js","redux/index.js","constants/index.js","index.js"],"names":["extendTheme","colors","transparent","black","white","gray","50","900","blue","500","600","800","styles","global","body","fontFamily","fonts","heading","firebase","initializeApp","JSON","parse","process","REACT_APP_FIREBASE_CONFIG","storage","Navbar","useColorMode","colorMode","toggleColorMode","isDark","as","align","justify","direction","wrap","height","px","ml","size","fontWeight","color","icon","isRound","onClick","ADD_PROJECT","DELETE_PROJECT","UPDATE_PROJECT","addProjectDispatch","project","dispatch","type","addProject","deleteProjectDispatch","index","deleteProject","updateProjectDispatch","updateProject","Form","styled","form","display","flexDirection","width","ImageBox","Box","theme","transition","radii","minHeight","border","borderRadius","lg","overflow","duration","normal","transform","boxShadow","MODE","DELETE_TYPE","UPLOAD","NEW","Add","useState","mode","setMode","title","setTitle","titleValid","setTitleValid","desc","setDesc","descValid","setDescValid","loading","setLoading","images","setImages","newImages","setNewImages","useParams","useSelector","projectsData","projects","useEffect","imageUploadRef","useRef","toast","useToast","useDispatch","useTheme","handleSubmit","evt","a","preventDefault","length","Promise","all","map","image","ref","child","uuid","put","imagesTask","snapshot","getDownloadURL","imagesURL","description","status","isClosable","message","onDelete","deleteIndex","ADD","imagesModifed","splice","alignItems","w","maxW","my","onSubmit","noValidate","mt","isInvalid","htmlFor","name","id","value","placeholder","errorBorderColor","onChange","e","target","autoFocus","isRequired","mb","current","click","files","multiple","accept","css","appearance","isLoading","templateColumns","gap","imageIndex","position","top","right","_hover","background","stopPropagation","src","URL","createObjectURL","alt","ProjectDetails","to","replace","justifyContent","Link","ms","objectFit","GridContainer","div","padding","columnGap","rowGap","justifyItems","gridTemplateColumns","marginTop","ProjectBox","Home","history","useHistory","cursor","push","fontSize","mx","App","exact","path","component","CardDetails","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","state","action","persistedStoreString","localStorage","getItem","persistedStore","store","createStore","reducers","REACT_APP_BUILD_ENV","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState","ReactDOM","render","initialcolormode","document","getElementById"],"mappings":"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","file":"static/js/main.45b70b65.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nexport default extendTheme({\n  colors: {\n    transparent: \"transparent\",\n    black: \"#000\",\n    white: \"#fff\",\n    gray: {\n      50: \"#f7fafc\",\n      900: \"#171923\",\n    },\n    blue: {\n      500: \"#3C8AFF\",\n      600: \"#1473FF\",\n      800: \"#091E42\",\n    },\n  },\n  styles: {\n    global: {\n      body: {\n        fontFamily: \"'DM Sans', sans-serif\",\n      },\n    },\n  },\n  fonts: {\n    heading: \"'DM Sans', sans-serif\",\n  },\n});\n","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\n\nfirebase.initializeApp(JSON.parse(process.env.REACT_APP_FIREBASE_CONFIG));\n\nexport const storage = firebase.storage();\n\nexport default firebase;\n","/** @jsxImportSource */\n\nimport {\n  useColorMode,\n  Flex,\n  Heading,\n  Spacer,\n  IconButton,\n} from \"@chakra-ui/react\";\n\nimport { FaSun, FaMoon } from \"react-icons/fa\";\n\nconst Navbar = () => {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const isDark = colorMode === \"dark\";\n  return (\n    <Flex\n      as=\"header\"\n      align=\"center\"\n      justify=\"space-between\"\n      direction=\"row\"\n      wrap=\"no-wrap\"\n      height=\"5rem\"\n      px={8}\n    >\n      <Heading ml=\"8\" size=\"xl\" fontWeight=\"semibold\" color=\"orange.400\">\n        Hobby\n      </Heading>\n\n      <Spacer />\n      <IconButton\n        ml={8}\n        icon={isDark ? <FaSun /> : <FaMoon />}\n        isRound=\"true\"\n        onClick={toggleColorMode}\n      />\n    </Flex>\n  );\n};\n\nexport default Navbar;\n","export const ADD_PROJECT = \"ADD_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\nexport const UPDATE_PROJECT = \"UPDATE_PROJECT\";\n\nexport const addProject = (project) => ({\n  type: ADD_PROJECT,\n  project,\n});\n\nexport const deleteProject = (index) => ({\n  type: DELETE_PROJECT,\n  index,\n});\n\nexport const updateProject = (index, project) => ({\n  type: UPDATE_PROJECT,\n  index,\n  project,\n});\n","import { addProject, deleteProject, updateProject } from \"../actions/project\";\n\nexport const addProjectDispatch = (project) => {\n  return (dispatch) => {\n    dispatch(addProject(project));\n  };\n};\nexport const deleteProjectDispatch = (index) => {\n  return (dispatch) => {\n    dispatch(deleteProject(index));\n  };\n};\n\nexport const updateProjectDispatch = (index, project) => {\n  return (dispatch) => {\n    dispatch(updateProject(index, project));\n  };\n};\n","/** @jsxImportSource @emotion/react */\n\nimport {\n  Button,\n  Input,\n  FormControl,\n  Container,\n  Textarea,\n  Heading,\n  useToast,\n  FormLabel,\n  FormErrorMessage,\n  Grid,\n  Box,\n  Image,\n  CloseButton,\n  useTheme,\n} from \"@chakra-ui/react\";\nimport styled from \"@emotion/styled\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { uuid } from \"uuidv4\";\nimport { useParams } from \"react-router-dom\";\nimport { storage } from \"../firebase\";\nimport Navbar from \"../components/Navbar\";\nimport {\n  addProjectDispatch,\n  updateProjectDispatch,\n} from \"../redux/triggers/project\";\n\nconst Form = styled.form({\n  display: \"inline-flex\",\n  flexDirection: \"column\",\n  width: \"100%\",\n});\n\nconst ImageBox = styled(Box)(({ theme }) => {\n  const { colors, transition, radii } = theme;\n  return {\n    minHeight: 150,\n    width: \"100%\",\n    border: `0.1px solid ${colors.gray[300]}`,\n    borderRadius: radii.lg,\n    overflow: \"hidden\",\n    transition: `all ${transition.duration.normal} ease`,\n    \"&:hover\": {\n      transform: \"translateY(-3px)\",\n      boxShadow:\n        \"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)\",\n    },\n  };\n});\n\nconst MODE = {\n  ADD: \"add\",\n  EDIT: \"edit\",\n};\n\nconst DELETE_TYPE = {\n  UPLOAD: \"UPLOAD\",\n  NEW: \"NEW\",\n};\n\nconst Add = () => {\n  const [mode, setMode] = useState(MODE.ADD);\n  const [title, setTitle] = useState(\"\");\n  const [titleValid, setTitleValid] = useState(true);\n  const [desc, setDesc] = useState(\"\");\n  const [descValid, setDescValid] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [images, setImages] = useState([]);\n  const [newImages, setNewImages] = useState([]);\n  const { index } = useParams();\n  const project = useSelector(\n    ({ projectsData }) => index && projectsData.projects[index]\n  );\n  useEffect(() => {\n    if (index) {\n      if (project) {\n        setTitle(project.title);\n        setDesc(project.desc);\n        setImages(project.images);\n        setMode(MODE.EDIT);\n      } else {\n        setMode(MODE.ADD);\n      }\n    } else {\n      setMode(MODE.ADD);\n    }\n  }, [index, project]);\n  const imageUploadRef = useRef(null);\n  const toast = useToast();\n  const dispatch = useDispatch();\n  const { colors } = useTheme();\n\n  const handleChange = (e) => {\n    if (!e.target?.files) {\n      return;\n    }\n    const { files } = e.target;\n    if (mode === MODE.EDIT) {\n      setNewImages([...newImages, ...files]);\n    } else {\n      setImages([...images, ...files]);\n    }\n  };\n  const handleSubmit = async (evt) => {\n    evt.preventDefault();\n    setLoading(true);\n    if (!title) {\n      setTitleValid(false);\n    } else if (!desc || desc.length <= 150) {\n      setDescValid(false);\n    } else {\n      setTitleValid(true);\n      setDescValid(true);\n      switch (mode) {\n        case MODE.ADD: {\n          try {\n            const imagesTask = await Promise.all(\n              images.map((image) =>\n                storage.ref().child(`images/${uuid()}`).put(image)\n              )\n            );\n            const imagesURL = await Promise.all(\n              imagesTask.map((snapshot) => snapshot.ref.getDownloadURL())\n            );\n            addProjectDispatch({\n              title,\n              desc,\n              images: imagesURL,\n            })(dispatch);\n            toast({\n              title: \"Project created.\",\n              description: `Created a new Project \"${title}\"`,\n              status: \"success\",\n              duration: 9000,\n              isClosable: true,\n            });\n          } catch (e) {\n            toast({\n              title: `Error occured`,\n              description: e.message ? e.message : \"Unknown error\",\n              status: \"error\",\n              isClosable: true,\n            });\n          }\n          break;\n        }\n        case MODE.EDIT: {\n          try {\n            const imagesTask = await Promise.all(\n              newImages.map((image) =>\n                storage.ref().child(`images/${uuid()}`).put(image)\n              )\n            );\n            const imagesURL = await Promise.all(\n              imagesTask.map((snapshot) => snapshot.ref.getDownloadURL())\n            );\n            updateProjectDispatch(index, {\n              title,\n              desc,\n              images: [...images, ...imagesURL],\n            })(dispatch);\n            setNewImages([]);\n            toast({\n              title: \"Project Updated.\",\n              description: `Update Project \"${title}\"`,\n              status: \"success\",\n              duration: 9000,\n              isClosable: true,\n            });\n          } catch (e) {\n            toast({\n              title: \"Error occured\",\n              description: e.message ? e.message : \"Unknown error\",\n              status: \"error\",\n              isClosable: true,\n            });\n          }\n          break;\n        }\n        default: {\n          //\n        }\n      }\n    }\n    // history.go(-1);\n    setLoading(false);\n  };\n\n  const onDelete = (type, deleteIndex) => {\n    switch (type) {\n      case DELETE_TYPE.ADD: {\n        const imagesModifed = [...images];\n        imagesModifed.splice(deleteIndex, 1);\n        setImages(imagesModifed);\n        break;\n      }\n      case DELETE_TYPE.NEW: {\n        const imagesModifed = [...newImages];\n        imagesModifed.splice(deleteIndex, 1);\n        setNewImages(imagesModifed);\n        break;\n      }\n      default: {\n        //\n      }\n    }\n  };\n  return (\n    <>\n      <Navbar />\n      <Container alignItems=\"center\" w=\"100%\" maxW=\"700\" my={50}>\n        <Heading>\n          {mode === MODE.EDIT ? \"Edit\" : \"Add\"} your project details:\n        </Heading>\n        <Form onSubmit={handleSubmit} noValidate>\n          <FormControl mt=\"2rem\" isInvalid={!titleValid}>\n            <FormLabel htmlFor=\"project\">Project Name</FormLabel>\n            <Input\n              name=\"project\"\n              id=\"project\"\n              value={title}\n              placeholder=\"Enter your Project title\"\n              errorBorderColor=\"red.300\"\n              onChange={(e) => setTitle(e.target.value)}\n              autoFocus\n            />\n            <FormErrorMessage>Project Title cannot be Empty</FormErrorMessage>\n          </FormControl>\n          <FormControl mt=\"1rem\" isInvalid={!descValid}>\n            <FormLabel htmlFor=\"desc\">Project Description</FormLabel>\n            <Textarea\n              id=\"desc\"\n              name=\"desc\"\n              height=\"300px\"\n              value={desc}\n              errorBorderColor=\"red.300\"\n              placeholder=\"Enter your project description here.\"\n              onChange={(e) => setDesc(e.target.value)}\n              isRequired\n            />\n            <FormErrorMessage>\n              Project Description needs to be a minimum of 150 characters\n            </FormErrorMessage>\n          </FormControl>\n          <Heading size=\"l\" mt=\"5\" mb=\"3\">\n            Upload file here:\n          </Heading>\n          <Button onClick={() => imageUploadRef.current.click()}>Upload</Button>\n          <input\n            type=\"file\"\n            ref={imageUploadRef}\n            onChange={handleChange}\n            multiple\n            accept=\"image/*\"\n            css={{ display: \"none\" }}\n          />\n          <Button\n            type=\"subtmit\"\n            appearance=\"primary\"\n            mt=\"40px\"\n            width=\"100%\"\n            isLoading={loading}\n          >\n            {mode === MODE.EDIT ? \"Update Project\" : \"Add a Project\"}\n          </Button>\n        </Form>\n        {images && images.length !== 0 && (\n          <Heading size=\"l\" mt=\"5\" mb=\"3\">\n            Image Preview:\n          </Heading>\n        )}\n        <Grid\n          templateColumns=\"repeat(auto-fill, minmax(325px, 1fr))\"\n          mt=\"5\"\n          gap=\"2\"\n        >\n          {images.map((image, imageIndex) => {\n            return (\n              <ImageBox key={image.name} position=\"relative\">\n                <CloseButton\n                  top=\"5px\"\n                  right=\"5px\"\n                  position=\"absolute\"\n                  _hover={{\n                    background: colors.gray[100],\n                  }}\n                  background=\"gray.300\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onDelete(DELETE_TYPE.ADD, imageIndex);\n                  }}\n                />\n                <Image\n                  src={\n                    // eslint-disable-next-line no-nested-ternary\n                    image\n                      ? mode === MODE.EDIT\n                        ? image\n                        : URL.createObjectURL(image)\n                      : null\n                  }\n                  alt={image.name}\n                />\n              </ImageBox>\n            );\n          })}\n          {newImages.map((image, imageIndex) => {\n            return (\n              <ImageBox key={image.name} position=\"relative\">\n                <CloseButton\n                  top=\"5px\"\n                  right=\"5px\"\n                  position=\"absolute\"\n                  _hover={{\n                    background: colors.gray[100],\n                  }}\n                  background=\"gray.300\"\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onDelete(DELETE_TYPE.NEW, imageIndex);\n                  }}\n                />\n                <Image\n                  src={image ? URL.createObjectURL(image) : null}\n                  alt={image.name}\n                />\n              </ImageBox>\n            );\n          })}\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default Add;\n","import {\n  Container,\n  Heading,\n  Text,\n  Stack,\n  Image,\n  IconButton,\n  HStack,\n} from \"@chakra-ui/react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { AiOutlineEdit } from \"react-icons/ai\";\nimport Navbar from \"../components/Navbar\";\n\nconst ProjectDetails = () => {\n  const { index } = useParams();\n  const project = useSelector(\n    ({ projectsData }) => projectsData.projects[index]\n  );\n\n  if (!project) {\n    return (\n      <>\n        <h1>Aww snap</h1>\n        <Link to=\"/\" replace />\n      </>\n    );\n  }\n  const { title, desc, images } = project;\n  return (\n    <>\n      <Navbar />\n      <Container alignItems=\"center\" w=\"100%\" maxW=\"700\" mt={50} mb={45}>\n        <HStack justifyContent=\"space-between\">\n          <Heading>{title}</Heading>\n          <IconButton\n            as={Link}\n            icon={<AiOutlineEdit />}\n            ms=\"auto\"\n            isRound\n            to={`/projects/add/${index}`}\n          />\n        </HStack>\n        <Text color=\"gray.500\" my=\"10\">\n          {desc}\n        </Text>\n        {images && images.length !== 0 && (\n          <Heading size=\"md\" my=\"2\">\n            Images:\n          </Heading>\n        )}\n        <Stack>\n          {images.map((image) => {\n            return (\n              <Image\n                src={image}\n                key={image}\n                objectFit=\"scale-down\"\n                width=\"100%\"\n              />\n            );\n          })}\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default ProjectDetails;\n","/** @jsxImportSource @emotion/react */\nimport styled from \"@emotion/styled\";\nimport { Text, CloseButton, Box } from \"@chakra-ui/react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { FiPlus } from \"react-icons/fi\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { uuid } from \"uuidv4\";\nimport { useTheme } from \"@emotion/react\";\nimport Navbar from \"../components/Navbar\";\nimport { deleteProjectDispatch } from \"../redux/triggers/project\";\n\nconst GridContainer = styled.div({\n  display: \"grid\",\n  padding: \"1rem\",\n  columnGap: 20,\n  rowGap: 20,\n  alignItems: \"center\",\n  justifyItems: \"center\",\n  gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n  marginTop: \"2rem\",\n});\n\nconst ProjectBox = styled(Box)(({ theme }) => {\n  const { colors, transition, radii } = theme;\n  return {\n    minHeight: 150,\n    width: \"100%\",\n    border: `0.1px solid ${colors.gray[300]}`,\n    borderRadius: radii.lg,\n    overflow: \"hidden\",\n    transition: `all ${transition.duration.normal} ease`,\n    \"&:hover\": {\n      transform: \"translateY(-3px)\",\n      boxShadow:\n        \"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)\",\n    },\n  };\n});\n\nconst Home = () => {\n  const projects = useSelector(({ projectsData }) => projectsData.projects);\n  const { colors } = useTheme();\n  const dispatch = useDispatch();\n  // const [projects, setProjects] = useState([\n  //   { title: \"My Project 1\", description: \"Ths is a sample text\" },\n  //   { title: \"My Project 2\", description: \"Ths is a sample text\" },\n  //   { title: \"My Project 3\", description: \"Ths is a sample text\" },\n  //   { title: \"My Project 4\", description: \"Ths is a sample text\" },\n  // ]);\n  const history = useHistory();\n\n  const onDelete = (index) => {\n    deleteProjectDispatch(index)(dispatch);\n  };\n  return (\n    <>\n      <Navbar />\n      <GridContainer>\n        {projects &&\n          projects.map(({ title, images }, index) => (\n            <ProjectBox\n              key={`${title}-${uuid()}`}\n              position=\"relative\"\n              cursor=\"pointer\"\n              onClick={() => history.push(`projects/${index}`)}\n            >\n              <CloseButton\n                top=\"5px\"\n                right=\"5px\"\n                position=\"absolute\"\n                _hover={{\n                  background: colors.gray[200],\n                }}\n                onClick={(e) => {\n                  onDelete(index);\n                  e.stopPropagation();\n                }}\n              />\n              {images[0] && (\n                <img\n                  alt={title}\n                  src={images[0]}\n                  css={{\n                    overflow: \"hidden\",\n                    height: \"140px\",\n                    width: \"100%\",\n                  }}\n                />\n              )}\n              <Text fontSize=\"md\" my={2} mx={3} color=\"gray.600\">\n                {title}\n              </Text>\n            </ProjectBox>\n          ))}\n        <ProjectBox\n          as={Link}\n          to=\"projects/add\"\n          css={{\n            height: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <FiPlus size={30} />\n        </ProjectBox>\n      </GridContainer>\n    </>\n  );\n};\n\nexport default Home;\n","/* eslint-disable react/jsx-props-no-spreading */\n/** @jsxImportSource */\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Add from \"./pages/Add\";\nimport CardDetails from \"./pages/ProjectDetails\";\nimport Home from \"./pages/Home\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/projects/add/:index?\" component={Add} />\n        <Route path=\"/projects/:index\" component={CardDetails} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport projectReducer from \"./project\";\n\nconst reducer = combineReducers({\n  projectsData: projectReducer,\n});\n\nexport default reducer;\n","import {\n  ADD_PROJECT,\n  DELETE_PROJECT,\n  UPDATE_PROJECT,\n} from \"../actions/project\";\n\nexport default (state = { projects: [] }, action) => {\n  switch (action.type) {\n    case ADD_PROJECT: {\n      return { ...state, projects: [...state.projects, action.project] };\n    }\n    case DELETE_PROJECT: {\n      const projects = [...state.projects];\n      projects.splice(action.index, 1);\n      return { ...state, projects };\n    }\n    case UPDATE_PROJECT: {\n      const projects = [...state.projects];\n      projects[action.index] = action.project;\n      return { ...state, projects };\n    }\n    default: {\n      return { ...state };\n    }\n  }\n};\n","/* eslint-disable no-underscore-dangle */\nimport { createStore } from \"redux\";\nimport { PROJECT_REDUX_STORE } from \"../constants\";\nimport reducers from \"./reducers\";\n\nconst persistedStoreString = localStorage.getItem(PROJECT_REDUX_STORE);\nconst persistedStore = persistedStoreString\n  ? JSON.parse(persistedStoreString)\n  : {};\nconst store = createStore(\n  reducers,\n  persistedStore,\n  process.env.REACT_APP_BUILD_ENV !== \"production\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe(() => {\n  localStorage.setItem(PROJECT_REDUX_STORE, JSON.stringify(store.getState()));\n});\n\nexport default store;\n","/* eslint-disable import/prefer-default-export */\nexport const PROJECT_REDUX_STORE = \"g1\";\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider, ColorModeScript } from \"@chakra-ui/react\";\nimport { Provider } from \"react-redux\";\nimport theme from \"./theme\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux\";\n\nReactDOM.render(\n  <StrictMode>\n    <ChakraProvider theme={theme}>\n      <ColorModeScript initialcolormode=\"light\" />\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ChakraProvider>\n  </StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}